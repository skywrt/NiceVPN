name: Nodes

on:
  schedule:
    - cron: '*/35 0-8 * * 1-5'
    - cron: '*/25 8-12 * * 1-5'
    - cron: '*/55 12-21 * * 1-4'
    - cron: '*/25 21-23 * * 1-5'
    - cron: '*/25 14-21 * * 5'
    - cron: '*/25 * * * 0,6'
  workflow_dispatch:

jobs:
  my-job:
    name: Max Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js and Python
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set timezone
        run: sudo timedatectl set-timezone 'Asia/Shanghai'

      - name: Configure git
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"

      - name: Install npm packages
        run: cd ./utils/rm/ && npm ci

      - name: Install pip packages
        run: pip install -r ./utils/pool/requirements.txt

      - name: Run Python script
        run: cd ./utils/pool/ && python main.py

      - name: Pull Clashcheck file
        id: clashcheck
        run: |
          timeout -k 20 4m wget ${{ secrets.Check_File }} -O ./utils/clashcheck/data/check.yaml -q || timeout -k 20 4m wget ${{ secrets.Check_File }} -O ./utils/clashcheck/data/check.yaml -q

      - name: Handle failure to pull Clashcheck file
        if: ${{ failure() && steps.clashcheck.conclusion == 'failure' }}
        run: echo -e "\033[31mFailed to pull clashcheck file.\033[0m"; rm utils/clashcheck/data/check.yaml

      - name: Process Clashcheck file
        if: ${{ success() }}
        run: |
          mv ./utils/clashcheck/data/check.yaml ./utils/subconverter/check.yaml
          ./utils/subconverter/subconverter -g --artifact "clash2base64"
          rm utils/subconverter/check.yaml

      - name: Merge URLs
        if: ${{ success() }}
        run: |
          base64 -d ./utils/subconverter/check > ./utils/rm/url1
          cat ./utils/rm/url1 ./sub/url2 > ./utils/rm/url
          rm ./utils/subconverter/check ./utils/rm/url1

      - name: Remove & Rename
        if: ${{ success() }}
        run: cd ./utils/rm/ && npm start

      - name: URL & HTTPS
        if: ${{ success() }}
        run: |
          rm ./utils/rm/url
          mv ./utils/rm/out ./url
          ./.github/url.sh > ./1
          cp url 2
          cat 1 2 > 3; rm 1 2
          base64 3 > https -w 0; rm 3
          base64 ./url > ./utils/subconverter/base64 -w 0
          cp ./utils/pool/output.yaml ./utils/subconverter/output.yaml
          sort url -o url

      - name: Generate Clash.yaml and other files
        if: ${{ success() }}
        run: |
          ./utils/subconverter/subconverter -g --artifact "clash"
          ./utils/subconverter/subconverter -g --artifact "long"
          ./utils/subconverter/subconverter -g --artifact "output"
          mv ./utils/subconverter/Clash.yaml ./Clash.yaml || true
          mv ./utils/subconverter/long ./long || true
          mv ./utils/subconverter/output.txt ./utils/pool/output.txt || true
          rm ./utils/subconverter/base64 ./utils/subconverter/output.yaml

      - name: Push changes to GitHub
        if: ${{ always() }}
        run: ./.github/update-repo.sh

      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 3
